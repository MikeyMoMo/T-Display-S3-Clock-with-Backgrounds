This build is a little complicated.  Please follow these steps, in order, and don't get in a rush.

T-Display-S3-Clock-with-Backgrounds

This is a little clock for the TTGO T-Display S3 with multiple background pictures and memory dimming.

I have learned a bit about installing this for the first time. I had a friend do it and figured out I needed to add in these steps to help you get it right. This is a slightly complicated install. Take them, one at a time, in order. Each step is easy. Nothing really complicated.

    Upgrade to ESP32 board level 3.1.3 or higher.

    You will need to upload in LittleFS format. To do that, install a new esp32fs.jar file from here:
    https://randomnerdtutorials.com/esp32-littlefs-arduino-ide/. There is a different procedure for Arduino IDE v1 and v2.

    Set your dark hours. Look for DARK_START and DARK_END. These are defaults and can be overridden by pressing the buttons to turn the
    display on during any of these hours. You can also change the brightness for other hours of the day or night and the setting will
    be remembered for the same hour every day.

    Setup your Tools menu per the .jpg included in the zip file then compile, load and run the program. No pictures are loaded yet. It
    will find no pix and use only the three built-in graphics backgrounds, red, green and blue until pix are loaded. Wait till you see
    time and date. Be sure to set it to 16M. There is no error message for this but if you forget to change to 16M, it will not honor
    the partitions.csv and it won't be able to load the background pictures. I changed to a T7 board with 4M and when I came back to
    the T-Display, I had trouble because I forgot to change it back to 16M. Silly me!

    The first time it is run, it might take a while to get around to making a display. During this time, it is formatting the
    spiffs/littlefs partition to accept the LittleFS background pictures. You can turn on the Serial Monitor and watch the error
    message repeat every 0 to 5ms for the entire time it is formatting the spiffs area. Using SPIFFS, it took 5.8 minutes. It is faster
    with LittleFS.

    When you get a display, close the Serial Monitor window. It interferes with the pictures upload. They forgot to disable the Serial
    Monitor window during picture upload. It is done during compile but not during file uploading. That's a bug!

    Select Tools>ESP32 Sketch Data Upload from the menu, then select LittleFS and press OK. It will create a compressed file and send
    it to the spiffs partition on the board. When done, it will reboot, all by itself, and should start working normally.

    The partition definitions file MUST be named "partitions.csv" or it will be ignored. Don't change the name. I could not find any
    documentation that specifies that requirement but it is required. And, it must be in the sketch folder. The alternative is to edit
    the boards.txt file but that is messy and it means that any time you upgrade or reinstall, you will lose that change. Better to
    just put it in the sketch folder and be done with it.

    If you choose to add pictures, create them at 320x170 (w x h) pixels and save then in the data folder. Then add them to the array
    named "FillPixArray". As of this writing, there are 194 pictures so the next one should be 120. The info in the array consists of:

    Color of the time characters, Color of the data characters, Color of the backlight characters (only on screen while changing the
    brightness of the screen) and two hatching control bools (true or false) If true, add a darkening screen behind the time characters
    to lower the brightness of the background.

    The files are normal .jpg files. You do not have to create bitmaps for them. Just copy your picture into the data file. Thank the
    creator of the jpg library for giving us an easy way to get jpg's onto the screen without having to turn them into hex code! Also
    thanks for enabling pulling them from the data partition rather than SD card. Made the project a lot easier!

    Be sure to change your WiFi credentials. Look for chSsid.

    In the TFT_eSPI folder, edit the User_Setup_Select.h and use this setup file if you will be using the T-Display S3:
    "Setup206_LilyGo_T_Display_S3.h> // Setup file for T-Display ESP32-S3"
